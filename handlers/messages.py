import aiogram.utils.exceptions
from handlers.init import *


async def start_cmd_handler(msg: Message, state: FSMContext):
    await state.finish()

    # Create user
    execute(
        ('INSERT OR IGNORE INTO users '
         '(user_id, username, created) '
         'VALUES (%s, "%s", %s);') %
        (msg.from_user.id, msg.from_user.username,
         now_unix_time())
    )
    execute(
        ('INSERT OR IGNORE INTO wallets '
         '(id, user_id, created) '
         'VALUES ("%s", %s, %s);') %
        (key(), msg.from_user.id, now_unix_time())
    )
    execute(
        ('UPDATE wallets SET tokens=50, diamonds=50 '
         'WHERE user_id=%s') % msg.from_user.id
    )

    answer = (
        '–ü—Ä–∏–≤–µ—Ç, *{}*!üëã\n\n'
        '–Ø - —Å–∏–º—É–ª—è—Ü–∏—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π.\n\n'
        'üíµ –ú–æ—è –≤–∞–ª—é—Ç–∞ - *—Ç–æ–∫–µ–Ω—ã* –∏ *–∞–ª–º–∞–∑—ã*.\n'
        '–¢–æ–∫–µ–Ω—ã –≤—ã—Å—Ç—É–ø–∞—é—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, '
        '–∞ –∞–ª–º–∞–∑—ã - –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –≤–∞–ª—é—Ç—ã.\n\n'
        'üë• –û–±–º–µ–Ω–∏–≤–∞–π *–∞–ª–º–∞–∑—ã *–ø–æ –±–æ–ª–µ–µ –≤—ã–≥–æ–¥–Ω–æ–º—É '
        '–∫—É—Ä—Å—É –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π *—Ç–æ–∫–µ–Ω—ã*.\n\n'
        'üèÜ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º '
        '*—Ç–æ–∫–µ–Ω–æ–≤* —Å–º–æ–≥—É –ø–æ–ø–∞—Å—Ç—å –≤ *—Ç–æ–ø-10.*\n\n'
        'üìñ *–ö–æ–º–∏—Å—Å–∏–∏ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:*\n'
        '‚Ä¢ –ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é —Ç–µ–±–µ –¥–∞—ë—Ç—Å—è 50 —Ç–æ–∫–µ–Ω–æ–≤\n'
        '‚Ä¢ –ó–∞ –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É –º—ã –∑–∞–±–∏—Ä–∞–µ–º 5% –æ—Ç —Å—É–º–º—ã'
    ).format(msg.from_user.first_name)

    await msg.answer(text=answer, parse_mode='markdown',
                     reply_markup=start_menu_reply_markup)


async def wallet_cmd_msg_handler(msg: Message):
    wallet_id, tokens, diamonds = execute(
        ('SELECT id, tokens, diamonds '
         'FROM wallets '
         'WHERE user_id=%s') % msg.from_user.id,
        fetchone=True
    )
    diamonds_word = morph.parse('–∞–ª–º–∞–∑')[0].make_agree_with_number(diamonds).word
    tokens_word = morph.parse('—Ç–æ–∫–µ–Ω')[0].make_agree_with_number(tokens).word

    answer = ('üëõ *–í–∞—à –∫–æ—à–µ–ª—ë–∫*\n\n'
              'üåé –ê–¥—Ä–µ—Å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–æ–≤: \n`%s`\n\n'
              'üîò *%s* %s\n\n'
              'üí† *%s* %s') % \
             (wallet_id, tokens, tokens_word, diamonds, diamonds_word)
    await msg.answer(text=answer, parse_mode='markdown',
                     reply_markup=start_menu_reply_markup)


async def help_cmd_handler(msg: Message, state: FSMContext):
    await state.finish()
    await state.finish()

    answer = ('üöë –ü–æ–º–æ—â—å '
              '...')
    await msg.answer(answer, parse_mode='markdown')


async def get_sticker_id_handler(msg: Message):
    await msg.answer_sticker(sticker=msg.sticker.file_id)
    print(msg.sticker.file_id)
